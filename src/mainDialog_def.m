graphics_toolkit qt;

%%%% Begin callbacks definitions

% Enables all UI elements based on the choice type.
% Choice must be either 'off' or 'on'.
function enableUI(mainDialog, choice)
    % Global buttons
    set(mainDialog.about_button, 'enable', choice);
    set(mainDialog.scenario_1_button, 'enable', choice);
    set(mainDialog.scenario_2_button, 'enable', choice);
    % Scenario 1
    set(mainDialog.interactions_slider, 'enable', choice);
    set(mainDialog.rx_point_button, 'enable', choice);
    set(mainDialog.rx_line_button, 'enable', choice);
    set(mainDialog.pdp_point_button, 'enable', choice);
    set(mainDialog.for_selected_interactions_button, 'enable', choice);
    set(mainDialog.pdp_line_button, 'enable', choice);
    set(mainDialog.excel_1, 'enable', choice);
    % Scenario 2
    set(mainDialog.setup_txs, 'enable', choice);
    set(mainDialog.noise_fig_edit, 'enable', choice);
    set(mainDialog.noise_temp_edit, 'enable', choice);
    set(mainDialog.bandwidth_edit, 'enable', choice);
    set(mainDialog.snir_edit, 'enable', choice);
    set(mainDialog.n_of_subcarriers_edit, 'enable', choice);
    set(mainDialog.subcarriers_per_user_edit, 'enable', choice);
    set(mainDialog.collisions_prob_edit, 'enable', choice);
    set(mainDialog.sampling_freq_edit, 'enable', choice);
    set(mainDialog.min_users_edit, 'enable', choice);
    set(mainDialog.max_users_edit, 'enable', choice);
    set(mainDialog.runs_edit, 'enable', choice);
    set(mainDialog.chirp_rate_edit, 'enable', choice);
    set(mainDialog.bitrate_edit, 'enable', choice);
    set(mainDialog.orth_factor_edit, 'enable', choice);
    set(mainDialog.eb_i_threshold_edit, 'enable', choice);
    set(mainDialog.users_tx_power_edit, 'enable', choice);
    set(mainDialog.general_network_button, 'enable', choice);
    set(mainDialog.ofdm_network_button, 'enable', choice);
    set(mainDialog.monte_carlo_button, 'enable', choice);
    set(mainDialog.cdma_network_button, 'enable', choice);
    set(mainDialog.excel_2, 'enable', choice);
    set(mainDialog.next_run_edit, 'enable', choice);
end

%%%%%%%%%%%%% SCENARIO 1 EDITS %%%%%%%%%%%%%

% Changes the handles' interactions and updates the gui label.
function interactions_slider_Callback(src, data)
  mainDialog = guidata(gcf);

  number = get(src, "value");
  number = round(number);

  mainDialog.handles.interactions = number;
  set(mainDialog.interactions_label, "String", num2str(number));

  guidata(mainDialog.figure, mainDialog);
end

% Based on a mouse input, deletes the previous cross point,
% paints a new one on the new coordinate and updates the handles' Rx point.
function rx_point_button_Callback(src, data)
  mainDialog = guidata(gcf);

  %% Get input
  [x, y, buttons] = ginput(1);

  if ((x < 0) || (x > 45) || ...
      (y < 0) || (y > 45))
      return;
  endif

  Rx = [x y 1.500000];

  % delete previous
  delete(mainDialog.Rx_x);
  delete(mainDialog.Rx_y);
  % assign new value
  mainDialog.handles.rx_single = Rx;
  % draw Rx (red) cross
  mainDialog.Rx_x = line(mainDialog.axis1, [Rx(1)-0.6 Rx(1)+0.6], ...
                           [Rx(2) Rx(2)], 'color', [1 0 0], 'linewidth', 1);
  mainDialog.Rx_y = line(mainDialog.axis1, [Rx(1) Rx(1)], ...
                           [Rx(2)-1 Rx(2)+1], 'color', [1 0 0], 'linewidth', 1);

  guidata(mainDialog.figure, mainDialog);
end

% Based on 2 mouse inputs, deletes the previous line,
% paints a new one on the new coordinates and updates the handles' line.
function rx_line_button_Callback(src, data)
  mainDialog = guidata(gcf);

  %% Get input
  [x1, y1, buttons] = ginput(1);
  [x2, y2, buttons] = ginput(1);

  if ((x1 < 0) || (x1 > 45) || ...
      (y1 < 0) || (y1 > 45) || ...
      (x2 < 0) || (x2 > 45) || ...
      (y2 < 0) || (y2 > 45))
        return;
  endif

  % Horizontal or Vertical
  if ((x1-x2)^2 > (y1 - y2)^2)
    y2 = y1;
  else
    x2 = x1;
  endif

  Line = [x1 x2 y1 y2];

  % delete previous
  delete(mainDialog.line);
  % assign new value
  mainDialog.handles.line = Line;
  % draw Rx (red) line
  mainDialog.line = line(mainDialog.axis1, [Line(1:2)], ...
                          [Line(3:4)], 'color', [1 0 0]);

  guidata(mainDialog.figure, mainDialog);
end


%%%%%%%%%%%%% SCENARIO 1 BUTTONS %%%%%%%%%%%%%

% Calls the corresponding function. If the Rx point or line is beyond coverage,
% an error log is displayed instead. If chosen, the function's returning values
% are written into a csv file.
function pdp_point_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');
  try

      [k_Rice, RMS_T, TT_N,PP_N] = Plot_Rays_PDP_Single_Point(handles);

      if (get(mainDialog.excel_1, 'Value') == 1)
        data(:,1)= TT_N';
        data(:,2)= PP_N';
        csvwrite('PDP_single_point.csv', data);
      endif
  catch Exception
      errordlg({'The Rx point or line you selected is beyond coverage!', ...
      'No ray leads to it. Please select another one.'}, 'Oops!', 'modal')
  end

  enableUI(mainDialog, 'on');
end

% Calls the corresponding function. If the Rx point or line is beyond coverage,
% an error log is displayed instead. If chosen, the function's returning values
% are written into a csv file.
function for_selected_interactions_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');
  try
      [k_Rice, RMS_T, TT_N,PP_N] = Plot_Rays_PDP_Spec_Generation(handles);

      if (get(mainDialog.excel_1, 'Value') == 1)
        data(:,1)= TT_N';
        data(:,2)= PP_N';
        csvwrite('PDP_single_point_one_interaction.csv', data);
      endif
  catch MException
      errordlg({'The Rx point or line you selected is beyond coverage!', ...
      'No ray leads to it. Please select another one.'}, 'Oops!', 'modal')
  end

  enableUI(mainDialog, 'on');
end

% Calls the corresponding function. If the Rx point or line is beyond coverage,
% an error log is displayed instead. If chosen, the function's returning values
% are written into a csv file.
function pdp_line_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');
  try
      [k_Rice, RMS_T] = Plot_Rays_PDP_Along_Lines(handles);

      if (get(mainDialog.excel_1, 'Value') == 1)
        data(:,1)= k_Rice';
        data(:,2)= RMS_T';
        csvwrite('PDP_line.csv', data);
      endif
  catch MException
      errordlg({'The Rx point or line you selected is beyond coverage!', ...
      'No ray leads to it. Please select another one.'}, 'Oops!', 'modal')
  end

  enableUI(mainDialog, 'on');
end


%%%%%%%%%%%%% SCENARIO 2 %%%%%%%%%%%%%

%%%%%%%%%%% SETUP TX %%%%%%%%%%%

% Scrollbar for the 'Setup Txs' window's panel.
% If the panel is smaller than the window, it does nothing.
function setup_txs_slider_Callback(src, data, panel, original_pos)
    value = get(src,'Value');
    pos = get(panel, 'Position');

    if (pos(4) < 400)
      return;
    endif

    set(panel, 'Position', [pos(1), original_pos+value, pos(3), pos(4)]);
end

% Saves the current changes done by the user in the 'Setup Txs' window.
% and closes the window.
% If any field is non-numerical it prompts an error dialog instead.
function save_changes_button_Callback(src, data, mainDialog, edit_fields)
    % check for any invalid values
    for [val, key] = edit_fields
        str = get(val, 'String');
        number = str2num(str);

        if isempty(number)
            set(val, 'string', '0');
            errordlg(['Non-numerical inputs are not allowed!' ...
                    '\nPlease input only numerical data.' ...
                    '\nCurrent changes not saved!']);
            return;
        endif
    endfor

    % save changes for each
    TxIDS = mainDialog.handles.TxIDS;
    for i=1:length(TxIDS)
        index = find(mainDialog.handles.TxIDS == TxIDS(i));

        pow = get(edit_fields.(['pow_edit_' num2str(TxIDS(i))]), 'String');
        gain = get(edit_fields.(['gain_edit_' num2str(TxIDS(i))]), 'String');

        mainDialog.handles.TxPows(index) = str2num(pow);
        mainDialog.handles.TxGains(index) = str2num(gain);
    endfor

    guidata(mainDialog.figure, mainDialog);
    % close current figure
    close();
end

% Creates the 'Setup Txs' window that contains all the Txs
% currently active by the user. Provides an edit field for each,
% to change Power and Gain.
function setup_txs_Callback(src, data)
    mainDialog = guidata(gcf);

    total_ids = mainDialog.handles.TxIDS;
    total_pows = mainDialog.handles.TxPows;
    total_gains = mainDialog.handles.TxGains;

    % 5 margin, 20 for titles, 40 for each ID,
    % 40 margin, 30 for button + a little  more (7)
    y_size = 5+20 + length(total_ids)*40 + 30+40+7;

    _scrSize = get(0, "screensize");
    _xPos = (_scrSize(3) - 270)/2;
    _yPos = (_scrSize(4) - y_size)/2;

    % figure, panel and slider
    setup_txs_window = figure ( ...
      'Color', [0.941 0.941 0.941], ...
      'resize', 'on', ...
      'Position', [_xPos _yPos 280 400], ...
      'windowstyle', 'normal', ...
      'MenuBar', 'none', ...
      'name', 'Setup Txs',
      'NumberTitle', 'off');
    % If you change 400 height above ^,
    % change it on the next 2 as well.
    % And the setup_txs_slider_Callback also.
    setup_txs_panel = uipanel( ...
      'parent', setup_txs_window, ...
      'Units', 'pixels', ...
      'BackgroundColor', [0.941 0.941 0.941], ...
      'BorderWidth', 1, ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'ForegroundColor', [0.000 0.000 0.000], ...
      'Position', [0 400-y_size 270 y_size], ...
      'title', '', ...
      'TitlePosition', 'lefttop');
    panel_slider = uicontrol(...
      'Parent', setup_txs_window, ...
      'Style', 'slider', ...
      'BackgroundColor', [0.941 0.941 0.941], ...
	    'ForegroundColor', [0.000 0.000 0.000], ...
      'Max', 0, ...
	    'Min', y_size-400, ...
      'Units', 'pixels', ...
      'Position', [270 0 10 400],...
      'Value', 0, ...
      'Callback',{@setup_txs_slider_Callback, setup_txs_panel, 400-y_size});

    pos = get(setup_txs_panel, 'Position');

    % create titles for each category
    ids_title_label = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','text', ...
        'Units', 'pixels', ...
        'BackgroundColor', [0.941 0.941 0.941], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [10 pos(4)-25 80 20], ...
        'String', 'ID');
    pows_title_label = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','text', ...
        'Units', 'pixels', ...
        'BackgroundColor', [0.941 0.941 0.941], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [95 pos(4)-25 80 20], ...
        'String', 'Power');
    gains_title_label = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','text', ...
        'Units', 'pixels', ...
        'BackgroundColor', [0.941 0.941 0.941], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [180 pos(4)-25 80 20], ...
        'String', 'Gain');

    % starting height
    y_pos = pos(4)-65;
    edit_fields = struct();
    % create id labels & power and gain edits
    % for each checkbox currently active.
    for i=1:length(total_ids)
      id_label = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','text', ...
        'Units', 'pixels', ...
        'BackgroundColor', [1 1 1], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [10 y_pos 80 33], ...
        'String', num2str(total_ids(i)));

      pow_edit = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','edit', ...
        'Units', 'pixels', ...
        'BackgroundColor', [1.000 1.000 1.000], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [95 y_pos 80 33], ...
        'String', num2str(total_pows(i)), ...
        'TooltipString', '');

       gain_edit = uicontrol( ...
        'parent', setup_txs_panel, ...
        'Style','edit', ...
        'Units', 'pixels', ...
        'BackgroundColor', [1.000 1.000 1.000], ...
        'FontAngle', 'normal', ...
        'FontName', 'Arial', ...
        'FontSize', 10, 'FontUnits', 'points', ...
        'FontWeight', 'normal', ...
        'ForegroundColor', [0.000 0.000 0.000], ...
        'HorizontalAlignment', 'center', ...
        'Position', [180 y_pos 80 33], ...
        'String', num2str(total_gains(i)), ...
        'TooltipString', '');

        y_pos -= 40;

        % save each edit field in the struct with the corresponding number.
        edit_fields.(['pow_edit_' num2str(total_ids(i))]) = pow_edit;
        edit_fields.(['gain_edit_' num2str(total_ids(i))]) = gain_edit;
    endfor

    button_width = 120;
    x_pos = (pos(3)/2) - (button_width/2);
    % Create Save Changes button.
    save_changes_button = uicontrol( ...
      'parent', setup_txs_panel, ...
      'Style','pushbutton', ...
      'Units', 'pixels', ...
      'BackgroundColor', [0.941 0.941 0.941], ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'ForegroundColor', [0.000 0.000 0.000], ...
      'Position', [x_pos, y_pos-5, button_width, 30], ...
      'String', 'Save Changes', ...
      'TooltipString', '', ...
      'Callback', {@save_changes_button_Callback, mainDialog, edit_fields});
end


%%%%%%%%%%% EDITS %%%%%%%%%%%
% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function noise_fig_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.NoiseFig = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function noise_temp_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.NoiseTemp = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function bandwidth_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.BW = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function snir_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.SINRthresh = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function n_of_subcarriers_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.NofSubcTotal = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function subcarriers_per_user_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.NofSubcPerUser = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function collisions_prob_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.Probability = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function sampling_freq_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.F_sampl = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function min_users_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.minUsers = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function max_users_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.maxUsers = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function runs_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.Runs = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function chirp_rate_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.chirp = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function bitrate_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.bitrate = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function orth_factor_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.Orthogonality_Factor = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function eb_i_threshold_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.Eb_I_Threshold = number;
  guidata(mainDialog.figure, mainDialog);
end

% Updates the corresponding handles' field with the new value.
% If the value is non-numerical, an error dialog is prompted instead.
function users_tx_power_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  str=get(src,'String');
  number = str2num(str);

  if isempty(number)
    set(src,'string','0');
    errordlg('Input must be numerical');
    return;
  end

  mainDialog.handles.Tx_Power_User = number;
  guidata(mainDialog.figure, mainDialog);
end

%%%%%%%%%%%%% SCENARIO 2 BUTTONS %%%%%%%%%%%%%
% Calls the corresponding function.
function general_network_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');

  General_Parameters_Net(handles);

  enableUI(mainDialog, 'on');
end

% Calls the corresponding function. If chosen, the function's
% returning values are written into a csv file.
function ofdm_network_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');

  [percent_cover_OFDM, percent_qpsk, percent_qam16, percent_qam64] ...
                                      = OFDM_Network(handles);

  if (get(mainDialog.excel_2, 'Value') == 1)
    data=[percent_cover_OFDM, percent_qpsk, percent_qam16, percent_qam64]';
    csvwrite('OFDM_coverage.csv', data);
  endif

  enableUI(mainDialog, 'on');
end

% Calls the corresponding function.
function monte_carlo_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;

  enableUI(mainDialog, 'off');

  MonteCarlo_OFDM(handles);

  enableUI(mainDialog, 'on');
end

% Calls the corresponding function. If the Tx_Power_User is greater than
% the max Tx Power in the handles, an error dialog is displayed instead.
function cdma_network_button_Callback(src, data)
  mainDialog = guidata(gcf);
  handles = mainDialog.handles;
  Tx_Power_User = handles.Tx_Power_User;
  TxPows = handles.TxPows;

  if (Tx_Power_User > max(TxPows))
      errodlg(["User's Tx Power (CDMA only) must be less than" ...
          " the maximum Tx power for any transmitter"], ...
          'Input Error','modal');
      return;
  end

  enableUI(mainDialog, 'off');
  [percent_cov_CDMA] = CDMA_Network(handles);
  enableUI(mainDialog, 'on');
end


%%%%%%%%%%%%%%   GUI   %%%%%%%%%%%%%%
% Swaps between Scenarios. Sets this panel to visible,
% and the other panels not visible.
function scenario_1_button_Callback(src, data)
  mainDialog = guidata(gcf);

  set(mainDialog.scenario_1, "visible", "on");
  set(mainDialog.scenario_2, "visible", "off");

  guidata(mainDialog.figure, mainDialog);
end

% Swaps between Scenarios. Sets this panel to visible,
% and the other panels not visible.
function scenario_2_button_Callback(src, data)
  mainDialog = guidata(gcf);

  set(mainDialog.scenario_1, "visible", "off");
  set(mainDialog.scenario_2, "visible", "on");

  guidata(mainDialog.figure, mainDialog);
end

% Updates the handles' figures_title. The title that the next
% figures that will be plotted will have.
function next_run_edit_Callback(src, data)
  mainDialog = guidata(gcf);

  mainDialog.handles.figures_title = get(src,'String');

  guidata(mainDialog.figure, mainDialog);
end

% Draws the lines that make up the 'floor' on both axes.
% Also draws the initial Tx, Rx points and line on the first axis.
function mainDialog = drawAxes(mainDialog)
  % get line positions
  facet = ProloadfacetCCSR;

  % plot them on both axes
  for i=1:size(facet,2);
      pos = facet(i).position;
      line(mainDialog.axis1, pos(1:2, 1), pos(1:2, 2), 'color', [0 0 0]);
      line(mainDialog.axis2, pos(1:2, 1), pos(1:2, 2), 'color', [0 0 0]);
  end

  Tx = mainDialog.handles.tx_single;
  % draw Tx (green) cross
  mainDialog.Tx_x = line(mainDialog.axis1, [Tx(1)-0.6 Tx(1)+0.6], ...
                          [Tx(2) Tx(2)], 'color', [0 1 0], 'linewidth', 1);
  mainDialog.Tx_y = line(mainDialog.axis1, [Tx(1) Tx(1)], [Tx(2)-1 Tx(2)+1], ...
                           'color', [0 1 0], 'linewidth', 1);

  Rx = mainDialog.handles.rx_single;
  % draw Rx (red) cross
  mainDialog.Rx_x = line(mainDialog.axis1, [Rx(1)-0.6 Rx(1)+0.6], ...
                          [Rx(2) Rx(2)], 'color', [1 0 0], 'linewidth', 1);
  mainDialog.Rx_y = line(mainDialog.axis1, [Rx(1) Rx(1)], ...
                          [Rx(2)-1 Rx(2)+1], 'color', [1 0 0], 'linewidth', 1);

  Line = mainDialog.handles.line;
  % draw (red) line
  mainDialog.line = line(mainDialog.axis1, [Line(1:2)], ...
                          [Line(3:4)], 'color', [1 0 0]);
end


% Changes the color of the label related to the checkbox pressed.
% The text color becomes green if activated, else black.
% Also updates the handles' TxIDS, TxPows and TxGains with
% the default values if activated or deletes them otherwise.
function checkbox_Callback(src, data)
  mainDialog = guidata(gcf);

  value = get(src, 'Value');
  number = get(src, 'String');

  if (value == 1)
      % change label color
      set(mainDialog.(['checkbox_label_' number]), 'ForegroundColor', [0 1 0]);

      % add values
      mainDialog.handles.TxIDS(end+1) = str2num(number);
      mainDialog.handles.TxPows(end+1) = -10;
      mainDialog.handles.TxGains(end+1) = 2;
  else
      % change label color
      set(mainDialog.(['checkbox_label_' number]), 'ForegroundColor', [0 0 0]);

      % delete stored values
      index = find(mainDialog.handles.TxIDS == str2num(number));
      mainDialog.handles.TxIDS(index) = [];
      mainDialog.handles.TxPows(index) = [];
      mainDialog.handles.TxGains(index) = [];
  endif

  guidata(mainDialog.figure, mainDialog);
end


% Populates the second axis by creating checkboxes
% on each position of the handles' TxPos.
% Also activates the initial Tx IDS.
function mainDialog = createCheckboxes(mainDialog)
  pos = get(mainDialog.axis2, 'Position');

  Tx_Pos = mainDialog.handles.Tx_Pos;

  % The weird 'Positions' with certain 'offsets' inside
  % the for loop, are calculated by eye and rigorous testing.
  % Changing the axis size, means that these are obsolete,
  % and need re-calculation.
  for i=1:size(Tx_Pos,1)
      %%%% Checkboxes' labels

      % width of label: 7 for 1 to 9
      %                14 for two digit numbers
      width = 7;
      if (i > 9)
        width = 14;
      endif

      offset = 18;
      checkbox_label = uicontrol( ...
      'parent', mainDialog.figure, ...
      'Style', 'text', ...
      'Units', 'pixels', ...
      'BackgroundColor', [1 1 1], ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'ForegroundColor', [0 0 0], ...
      'HorizontalAlignment', 'left', ...
      'Position', [pos(1)+(offset*2)+Tx_Pos(i, 2)*400/45, ...
                   pos(2)+(offset+1)+Tx_Pos(i, 3)*230/45, width, 10], ...
      'String', num2str(i), ...
      'TooltipString', '');

      % Standard naming for labels: checkbox_label_N
      mainDialog.(['checkbox_label_' num2str(i)]) = checkbox_label;

      %%%% Checkboxes
      checkbox = uicontrol( ...
      'parent', mainDialog.figure, ...
      'Style', 'checkbox', ...
      'Units', 'pixels', ...
      'BackgroundColor', [1 1 1], ...
      'ForegroundColor', [1 1 1], ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'ForegroundColor', [0.000 0.000 0.000], ...
      'Position', [pos(1)+(offset)+Tx_Pos(i, 2)*400/45, ...
                   pos(2)+offset+Tx_Pos(i, 3)*230/45, 13, 13], ...
      'String', num2str(i), ...
      'TooltipString', '', ...
      'Min', 0, 'Max', 1, ...
      'Value', 0);

      set(checkbox, 'callback', @checkbox_Callback);

      % Standard naming for checkboxes: checkbox_N
      mainDialog.(['checkbox' num2str(i)]) = checkbox;
  endfor

  % Activate the initial checkboxes
  TxIDS = mainDialog.handles.TxIDS;
  for i=1:length(TxIDS)
      set(mainDialog.(['checkbox' num2str(TxIDS(i))]), 'Value', 1);
      set(mainDialog.(['checkbox_label_' num2str(TxIDS(i))]), ...
                       'ForegroundColor', [0 1 0]);
  endfor
end

% Creates the 'About' window, showcasing info about its contributors.
function about_Callback(src, data)
    % window values
    width = 410;
    height = 210;
    _scrSize = get(0, "screensize");
    _xPos = (_scrSize(3) - width)/2;
    _yPos = (_scrSize(4) - height)/2;

    about_figure = figure (
      'resize', 'on', ...
      'windowstyle', 'normal', ...
      'MenuBar', 'none', ...
      'name', 'About', ...
      'NumberTitle', 'off', ...
      'Position', [_xPos, _yPos, width, height], ...
      'visible', 'off');

    % Side img
    image_axis = axes( ...
      'Units', 'pixels', ...
      'parent', about_figure, ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'Position', [0 55 120 120] );

    Img = imread('about_image.png');
    imshow(Img, 'parent', image_axis);

    % Texts
    about_labels_texts = {'Created for the', ...
             'International Hellenic University,', ....
             'Greece, November 2010,', ...
             '', ...
             'by C.Liaskos and G.Koutitas,', ...
             '(cliaskos@csd.auth.gr, g.koutitas@ihu.edu.gr)', ...
             '', ...
             'Updated by A.Charisis and I.Katsaros,', ...
             '(alexxarisis@gmail.com, katsaros97g@gmail.com)'};

    % Height (y) for the first label.
    y = 180;
    % Make labels for each text
    for i=1:length(about_labels_texts)
       uicontrol( ...
      'parent', about_figure, ...
      'Style', 'text', ...
      'Units', 'pixels', ...
      'BackgroundColor', [1 1 1], ...
      'FontAngle', 'normal', ...
      'FontName', 'Arial', ...
      'FontSize', 10, 'FontUnits', 'points', ...
      'FontWeight', 'normal', ...
      'ForegroundColor', [0 0 0], ...
      'HorizontalAlignment', 'left', ...
      'Position', [110 y 300 20], ...
      'String', about_labels_texts(i), ...
      'TooltipString', '');

      y -= 20;
    endfor

    set(about_figure, 'visible', 'on');
end


%%%% Main function, creating the whole GUI
function ret = show_mainDialog()
  wait_bar = waitbar(0, 'Generating GUI.');

  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 1340)/2;
  _yPos = (_scrSize(4) - 658)/2;
   mainDialog = figure ( ...
	'Color', [0.941 0.941 0.941], ...
	'Position', [_xPos _yPos 1340 658], ...
	'resize', 'on', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none', ...
  'name', ['International Hellenic University - ' ...
        'Indoors wireless network planning exercise'], ...
  'NumberTitle', 'off', ...
  'visible', 'off');
  about_button = uicontrol( ...
	'parent',mainDialog, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1 1 1], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [1260 625 50 20], ...
	'String', 'About', ...
	'TooltipString', '');
  scenario_1 = uipanel( ...
	'parent',mainDialog, ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'BorderWidth', 1, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [25 313 1290 310], ...
	'title', 'Scenario 1', ...
	'TitlePosition', 'lefttop');
  number_of_ray_interactions_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 14, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [55 168 230 22], ...
	'String', 'Number of ray interactions: ', ...
	'TooltipString', '');
  interactions_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 22, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [290 162 16 33], ...
	'String', '5', ...
	'TooltipString', '');
  interactions_slider = uicontrol( ...
	'parent',scenario_1, ...
	'Style','slider', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Max', 8, ...
	'Min', 1, ...
	'Position', [48 142 276 18], ...
	'TooltipString', '', ...
	'Value', 5);
  rx_point_button = uicontrol( ...
	'parent',scenario_1, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [440 205 118 25], ...
	'String', 'Pick a Rx point', ...
	'TooltipString', '');
  rx_line_button = uicontrol( ...
	'parent',scenario_1, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [440 95 118 25], ...
	'String', 'Pick a Rx line', ...
	'TooltipString', '');
  horizontal_or_vertical_only_text = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [420 75 160 20], ...
	'String', '(Horizontal or vertical only)', ...
	'TooltipString', '');
  pdp_point_button = uicontrol( ...
	'parent',scenario_1, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [685 205 118 25], ...
	'String', 'PDP at point...', ...
	'TooltipString', '');
  for_selected_interactions_button = uicontrol( ...
	'parent',scenario_1, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [750 159 170 26], ...
	'String', '... for selected interactions', ...
	'TooltipString', '');
  pdp_line_button = uicontrol( ...
	'parent',scenario_1, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [685 95 118 25], ...
	'String', 'PDP at line...', ...
	'TooltipString', '');
  for_fixed_tx_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 12, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [75 222 184 18], ...
	'String', 'For fixed Tx at [10, 15, 1.5]', ...
	'TooltipString', '');
  excel_1 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','radiobutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [1100 265 113 20], ...
	'String', 'Export to Excel', ...
	'TooltipString', '', ...
	'Min', 0, 'Max', 1, 'Value', 0);
  excel_1_description = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1105 245 120 20], ...
	'String', '(Creates a .csv file)', ...
	'TooltipString', '');
  pdp_point_excel_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1075 209 156 16], ...
	'String', '... Delays, Received Power', ...
	'TooltipString', '');
  for_selected_interactions_excel_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1075 164 156 16], ...
	'String', '... Delays, Received Power', ...
	'TooltipString', '');
  pdp_line_excel_label = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1090 99 121 16], ...
	'String', '... K Factor, RMS (T)', ...
	'TooltipString', '');
  line27 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [802 214 273 16], ...
	'String', '_______________________________________', ...
	'TooltipString', '');
  line28 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [919 169 156 16], ...
	'String', '_______________________', ...
	'TooltipString', '');
  line29 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [802 104 287 16], ...
	'String', '_________________________________________', ...
	'TooltipString', '');
  line32 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [557 214 129 16], ...
	'String', '___________________', ...
	'TooltipString', '');
  line33 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [557 104 129 16], ...
	'String', '___________________', ...
	'TooltipString', '');
  line34 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [744 164 7 16], ...
	'String', 'L', ...
	'TooltipString', '');
  line35 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [744 192 3 12], ...
	'String', 'I', ...
	'TooltipString', '');
  line36 = uicontrol( ...
	'parent',scenario_1, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [744 176 3 11], ...
	'String', 'I', ...
	'TooltipString', '');
  scenario_2 = uipanel( ...
	'parent',mainDialog, ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'BorderWidth', 1, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [25 313 1290 310], ...
	'title', 'Scenario 2', ...
	'TitlePosition', 'lefttop');
  setup_txs = uicontrol( ...
	'parent',scenario_2, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [30 238 90 22], ...
	'String', 'Setup Txs', ...
	'TooltipString', '');
  setup_rx = uipanel( ...
	'parent',scenario_2, ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'BorderWidth', 1, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [23 22 160 200], ...
	'title', 'Setup Rx', ...
	'TitlePosition', 'centertop');
  noise_fig_edit = uicontrol( ...
	'parent',setup_rx, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [20 128 120 22], ...
	'String', '10', ...
	'TooltipString', '');
  noise_fig_label = uicontrol( ...
	'parent',setup_rx, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [20 154 59 16], ...
	'String', 'Noise Fig:', ...
	'TooltipString', '');
  noise_temp_label = uicontrol( ...
	'parent',setup_rx, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [20 104 72 16], ...
	'String', 'Noise Temp:', ...
	'TooltipString', '');
  noise_temp_edit = uicontrol( ...
	'parent',setup_rx, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [20 78 120 22], ...
	'String', '300', ...
	'TooltipString', '');
  bandwidth_label = uicontrol( ...
	'parent',setup_rx, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [20 54 68 16], ...
	'String', 'BandWidth:', ...
	'TooltipString', '');
  not_for_cdma_label = uicontrol( ...
	'parent',setup_rx, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [20 39 88 16], ...
	'String', '(Not for CDMA)', ...
	'TooltipString', '');
  bandwidth_edit = uicontrol( ...
	'parent',setup_rx, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [20 13 120 22], ...
	'String', '10000000', ...
	'TooltipString', '');
  GroupPanel_5 = uipanel( ...
	'parent',scenario_2, ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'BorderWidth', 1, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [301 23 488 267], ...
	'title', '', ...
	'TitlePosition', 'lefttop');
  snir_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [10 226 87 16], ...
	'String', 'SNIR threshold', ...
	'TooltipString', '');
  snir_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [10 200 120 22], ...
	'String', '5', ...
	'TooltipString', '');
  n_of_subcarriers_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [10 166 93 16], ...
	'String', 'N of Subcarriers', ...
	'TooltipString', '');
  subcarriers_per_user_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [115 166 117 16], ...
	'String', 'Subcarriers per user', ...
	'TooltipString', '');
  collisions_prob_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [245 166 82 16], ...
	'String', 'Collision prob.', ...
	'TooltipString', '');
  sampling_freq_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [340 166 83 16], ...
	'String', 'Sampling freq.', ...
	'TooltipString', '');
  n_of_subcarriers_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [10 140 93 22], ...
	'String', '1000', ...
	'TooltipString', '');
  subcarriers_per_user_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [115 140 117 22], ...
	'String', '250', ...
	'TooltipString', '');
  collisions_prob_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [245 140 82 22], ...
	'String', '0.30000', ...
	'TooltipString', '');
  sampling_freq_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [340 140 83 22], ...
	'String', '11000000', ...
	'TooltipString', '');
  min_users_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [100 106 59 16], ...
	'String', 'Min Users', ...
	'TooltipString', '');
  max_users_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [200 106 63 16], ...
	'String', 'Max Users', ...
	'TooltipString', '');
  runs_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [325 106 30 16], ...
	'String', 'Runs', ...
	'TooltipString', '');
  min_users_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [100 80 68 22], ...
	'String', '2', ...
	'TooltipString', '');
  max_users_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [200 80 72 22], ...
	'String', '10', ...
	'TooltipString', '');
  runs_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [300 80 90 22], ...
	'String', '1000', ...
	'TooltipString', '');
  chirp_rate_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [10 46 56 16], ...
	'String', 'Chirp rate', ...
	'TooltipString', '');
  bitrate_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [90 46 38 16], ...
	'String', 'Bitrate', ...
	'TooltipString', '');
  orth_factor_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [160 46 113 16], ...
	'String', 'Orthogonality factor', ...
	'TooltipString', '');
  eb_i_threshold_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [285 46 89 16], ...
	'String', 'Eb_I_Threshold', ...
	'TooltipString', '');
  users_tx_power_label = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [385 46 94 16], ...
	'String', "User's Tx Power", ...
	'TooltipString', '');
  chirp_rate_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [10 20 66 22], ...
	'String', '3840000', ...
	'TooltipString', '');
  bitrate_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [90 20 58 22], ...
	'String', '64000', ...
	'TooltipString', '');
  orth_factor_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [160 20 113 22], ...
	'String', '0.60000', ...
	'TooltipString', '');
  eb_i_threshold_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [285 20 90 22], ...
	'String', '6', ...
	'TooltipString', '');
  users_tx_power_edit = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'center', ...
	'Position', [385 20 94 22], ...
	'String', '-19', ...
	'TooltipString', '');
  line2 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [130 206 357 16], ...
	'String', '___________________________________________________', ...
	'TooltipString', '');
  line5 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [103 146 12 16], ...
	'String', '__', ...
	'TooltipString', '');
  line6 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [232 146 13 16], ...
	'String', '__', ...
	'TooltipString', '');
  line7 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [327 146 13 16], ...
	'String', '__', ...
	'TooltipString', '');
  line9 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [423 146 64 16], ...
	'String', '__________', ...
	'TooltipString', '');
  line12 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [168 86 32 16], ...
	'String', '_____', ...
	'TooltipString', '');
  line13 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [272 86 28 16], ...
	'String', '_____', ...
	'TooltipString', '');
  line14 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [390 86 97 16], ...
	'String', '_______________', ...
	'TooltipString', '');
  line17 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [76 26 14 16], ...
	'String', '___', ...
	'TooltipString', '');
  line18 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [148 26 12 16], ...
	'String', '__', ...
	'TooltipString', '');
  line19 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [273 26 12 16], ...
	'String', '__', ...
	'TooltipString', '');
  line20 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [375 26 10 16], ...
	'String', '__', ...
	'TooltipString', '');
  line21 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [479 26 8 16], ...
	'String', '__', ...
	'TooltipString', '');
  line37 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [93 85 7 16], ...
	'String', 'L', ...
	'TooltipString', '');
  line38 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [93 124 3 16], ...
	'String', 'I', ...
	'TooltipString', '');
  line39 = uicontrol( ...
	'parent',GroupPanel_5, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [93 106 3 16], ...
	'String', 'I', ...
	'TooltipString', '');
  general_network_button = uicontrol( ...
	'parent',scenario_2, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [850 220 118 25], ...
	'String', 'General Network', ...
	'TooltipString', '');
  ofdm_network_button = uicontrol( ...
	'parent',scenario_2, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [850 160 118 25], ...
	'String', 'OFDM Network', ...
	'TooltipString', '');
  monte_carlo_button = uicontrol( ...
	'parent',scenario_2, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [915 100 118 25], ...
	'String', 'Monte Carlo', ...
	'TooltipString', '');
  cdma_network_button = uicontrol( ...
	'parent',scenario_2, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [850 40 118 25], ...
	'String', 'CDMA Network', ...
	'TooltipString', '');
  general_network_na_label = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1155 224 22 16], ...
	'String', 'N/A', ...
	'TooltipString', '');
  excel_2 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','radiobutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [1100 265 113 20], ...
	'String', 'Export to Excel', ...
	'TooltipString', '', ...
	'Min', 0, 'Max', 1, 'Value', 0);
   excel_2_description = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1105 245 120 20], ...
	'String', '(Creates a .csv file)', ...
	'TooltipString', '');
  ofdm_network_na_label = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1155 104 22 16], ...
	'String', 'N/A', ...
	'TooltipString', '');
  cdma_network_na_label = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1155 44 22 16], ...
	'String', 'N/A', ...
	'TooltipString', '');
  monte_carlo_coverage_label = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1139 174 57 16], ...
	'String', 'Coverage:', ...
	'TooltipString', '');
  monte_carlo_types_label = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1095 154 161 16], ...
	'String', '(Total, qpsk,qam16, qam64)', ...
	'TooltipString', '');
  line3 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [789 229 62 16], ...
	'String', '______________', ...
	'TooltipString', '');
  line1 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [183 169 118 16], ...
	'String', '______________________', ...
	'TooltipString', '');
  line4 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [967 229 182 16], ...
	'String', '__________________________', ...
	'TooltipString', '');
  line10 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [789 169 62 16], ...
	'String', '_________', ...
	'TooltipString', '');
  line11 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [967 169 172 16], ...
	'String', '_________________________', ...
	'TooltipString', '');
  line15 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [789 109 127 16], ...
	'String', '___________________', ...
	'TooltipString', '');
  line16 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [1032 109 116 16], ...
	'String', '_________________', ...
	'TooltipString', '');
  line22 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [789 49 62 16], ...
	'String', '_________', ...
	'TooltipString', '');
  line23 = uicontrol( ...
	'parent',scenario_2, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [967 49 182 16], ...
	'String', '__________________________', ...
	'TooltipString', '');
  scenario_1_button = uicontrol( ...
	'parent',mainDialog, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [30 601 90 22], ...
	'String', 'Scenario 1', ...
	'TooltipString', '');
  scenario_2_button = uicontrol( ...
	'parent',mainDialog, ...
	'Style','pushbutton', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [120 601 90 22], ...
	'String', 'Scenario 2', ...
	'TooltipString', '');
  legends = uipanel( ...
	'parent',mainDialog, ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'BorderWidth', 1, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'Position', [25 24 1290 284], ...
	'title', 'Legend for...', ...
	'TitlePosition', 'lefttop');
  axis1 = axes( ...
	'Units', 'pixels', ...
	'parent',legends, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'Position', [370 14 400 230], ...
  'ytick', [], 'xtick', [], ...
  'xlim', [0 45], 'ylim', [0 45]);
  axis2 = axes( ...
	'Units', 'pixels', ...
	'parent',legends, ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'Position', [815 14 400 230], ...
  'ytick', [], 'xtick', [], ...
  'xlim', [0 45], 'ylim', [0 45]);
  axis1_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [525 253 90 16], ...
	'String', '...SCENARIO 1', ...
	'TooltipString', '');
  axis2_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [975 253 90 16], ...
	'String', '...SCENARIO 2', ...
	'TooltipString', '');
  inactive_tx_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 11, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [115 222 102 17], ...
	'String', '+  :   Inactive Tx', ...
	'TooltipString', '');
  active_tx_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 11, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.800 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [115 197 91 17], ...
	'String', '+  :   Active Tx', ...
	'TooltipString', '');
  rx_point_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 11, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [1.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [115 172 88 17], ...
	'String', '+  :   Rx Point', ...
	'TooltipString', '');
  rx_line_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 11, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [1.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [110 147 89 17], ...
	'String', '__  :   Rx Line', ...
	'TooltipString', '');
  next_run_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [85 108 157 16], ...
	'String', 'Label for next run (optional)', ...
	'TooltipString', '');
  next_run_edit = uicontrol( ...
	'parent',legends, ...
	'Style','edit', ...
	'Units', 'pixels', ...
	'BackgroundColor', [1.000 1.000 1.000], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [85 77 157 22], ...
	'String', '', ...
	'TooltipString', '');
  will_be_appended_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [80 53 166 16], ...
	'String', '(Will be appended to the title', ...
	'TooltipString', '');
  of_the_next_run_label = uicontrol( ...
	'parent',legends, ...
	'Style','text', ...
	'Units', 'pixels', ...
	'BackgroundColor', [0.941 0.941 0.941], ...
	'FontAngle', 'normal', ...
	'FontName', 'Arial', ...
	'FontSize', 10, 'FontUnits', 'points', ...
	'FontWeight', 'normal', ...
	'ForegroundColor', [0.000 0.000 0.000], ...
	'HorizontalAlignment', 'left', ...
	'Position', [100 33 126 16], ...
	'String', ' of the next run/figure)', ...
	'TooltipString', '');

% Create a struct with all the necessary objects.
  mainDialog = struct( ...
      'figure', mainDialog, ...
      'about_button', about_button, ...
      'scenario_1', scenario_1, ...
      'interactions_slider', interactions_slider, ...
      'interactions_label', interactions_label, ...
      'rx_point_button', rx_point_button, ...
      'rx_line_button', rx_line_button, ...
      'pdp_point_button', pdp_point_button, ...
      'for_selected_interactions_button', for_selected_interactions_button, ...
      'pdp_line_button', pdp_line_button, ...
      'excel_1', excel_1, ...
      'scenario_2', scenario_2, ...
      'setup_txs', setup_txs, ...
      'setup_rx', setup_rx, ...
      'noise_fig_edit', noise_fig_edit, ...
      'noise_temp_edit', noise_temp_edit, ...
      'bandwidth_edit', bandwidth_edit, ...
      'GroupPanel_5', GroupPanel_5, ...
      'snir_edit', snir_edit, ...
      'n_of_subcarriers_edit', n_of_subcarriers_edit, ...
      'subcarriers_per_user_edit', subcarriers_per_user_edit, ...
      'collisions_prob_edit', collisions_prob_edit, ...
      'sampling_freq_edit', sampling_freq_edit, ...
      'min_users_edit', min_users_edit, ...
      'max_users_edit', max_users_edit, ...
      'runs_edit', runs_edit, ...
      'chirp_rate_edit', chirp_rate_edit, ...
      'bitrate_edit', bitrate_edit, ...
      'orth_factor_edit', orth_factor_edit, ...
      'eb_i_threshold_edit', eb_i_threshold_edit, ...
      'users_tx_power_edit', users_tx_power_edit, ...
      'general_network_button', general_network_button, ...
      'ofdm_network_button', ofdm_network_button, ...
      'monte_carlo_button', monte_carlo_button, ...
      'cdma_network_button', cdma_network_button, ...
      'excel_2', excel_2, ...
      'scenario_1_button', scenario_1_button, ...
      'scenario_2_button', scenario_2_button, ...
      'legends', legends, ...
      'axis1', axis1, ...
      'axis2', axis2, ...
      'next_run_edit', next_run_edit);

% Assign callbacks.
set (about_button, 'callback', @about_Callback);

set (scenario_1_button, 'callback', @scenario_1_button_Callback);
set (interactions_slider, 'callback', @interactions_slider_Callback);
set (rx_point_button, 'callback', @rx_point_button_Callback);
set (rx_line_button, 'callback', @rx_line_button_Callback);
set (pdp_point_button, 'callback', @pdp_point_button_Callback);
set (for_selected_interactions_button, 'callback', @for_selected_interactions_button_Callback);
set (pdp_line_button, 'callback', @pdp_line_button_Callback);

set (scenario_2_button, 'callback', @scenario_2_button_Callback);
set (setup_txs, 'callback', @setup_txs_Callback);
set (noise_fig_edit, 'callback', @noise_fig_edit_Callback);
set (noise_temp_edit, 'callback', @noise_temp_edit_Callback);
set (bandwidth_edit, 'callback', @bandwidth_edit_Callback);
set (snir_edit, 'callback', @snir_edit_Callback);
set (n_of_subcarriers_edit, 'callback', @n_of_subcarriers_edit_Callback);
set (subcarriers_per_user_edit, 'callback', @subcarriers_per_user_edit_Callback);
set (collisions_prob_edit, 'callback', @collisions_prob_edit_Callback);
set (sampling_freq_edit, 'callback', @sampling_freq_edit_Callback);
set (min_users_edit, 'callback', @min_users_edit_Callback);
set (max_users_edit, 'callback', @max_users_edit_Callback);
set (runs_edit, 'callback', @runs_edit_Callback);
set (chirp_rate_edit, 'callback', @chirp_rate_edit_Callback);
set (bitrate_edit, 'callback', @bitrate_edit_Callback);
set (orth_factor_edit, 'callback', @orth_factor_edit_Callback);
set (eb_i_threshold_edit, 'callback', @eb_i_threshold_edit_Callback);
set (users_tx_power_edit, 'callback', @users_tx_power_edit_Callback);
set (general_network_button, 'callback', @general_network_button_Callback);
set (ofdm_network_button, 'callback', @ofdm_network_button_Callback);
set (monte_carlo_button, 'callback', @monte_carlo_button_Callback);
set (cdma_network_button, 'callback', @cdma_network_button_Callback);

set (next_run_edit, 'callback', @next_run_edit_Callback);

dlg = struct(mainDialog);

% Load assets.
waitbar(0.3, wait_bar, 'Loading assets.');
mainDialog.handles = init(wait_bar);

% Apply last changes on the GUI.
waitbar(0.9, wait_bar, 'Almost done.');
mainDialog = drawAxes(mainDialog);
mainDialog = createCheckboxes(mainDialog);

% Save into the main figure.
guidata(mainDialog.figure, mainDialog);

%
% The source code writed here will be executed when
% windows load. Work like 'onLoad' event of other languages.
%
  close(wait_bar);
  set(mainDialog.figure, 'visible', 'on');
  ret = mainDialog;
end

